<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spring.blog.dao.Blogmaoper">
    <resultMap id="blog" type="com.spring.blog.model.entity.Blogmodel.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="firstPicture" column="firstPicture"/>
        <result property="recommend" column="recommend"/>
        <result property="comment" column="comment"/>
        <result property="createTime" column="createTime"/>
        <result property="updateTime" column="updateTime"/>
        <result property="views" column="views"/>
        <result property="words" column="words"/>
        <result property="publish" column="publish"/>
        <result property="writer_id" column="writerid"></result>

<!--        association 的property的生成是从resultMap id 的model的中生成的-->
        <association property="userLoginMsg" javaType="com.spring.blog.model.vo.UserLoginMsg">
            <id property="id" column="user_id"/>
            <result property="username" column="username"/>
        </association>
    </resultMap>

<!--只要有对应的行名称就会将数据放在哪里-->
    <resultMap id="comments" type="com.spring.blog.model.entity.Blogmodel.Comment">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="content" column="content"/>
        <result property="createTime" column="createTime"/>
        <result property="blog_id" column="blog_id"/>
        <result property="f_id" column="f_id"/>
    </resultMap>


    <resultMap id="userLoginMsg" type="com.spring.blog.model.vo.UserLoginMsg">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
    </resultMap>


<!--查找blog的数据满足-->

  <select id="getIDByUsername" resultMap="userLoginMsg" >
        SELECT id
        FROM users
        WHERE username=#{username}
    </select>
    <select id="getArticle" parameterType="java.lang.Integer" resultMap="blog">
        SELECT b.id,b.title,b.content,b.views,b.comment,b.recommend,b.createTime,u.username
        FROM blog AS b,users AS u
        WHERE b.writerid=u.id and b.id=#{id};
    </select>

    <select id="getIndexBlogList" resultMap="blog">
        SELECT b.id,b.title,b.content,b.views,b.comment,b.recommend,u.username
        FROM blog AS b,users AS u
        WHERE b.writerid=u.id
        order by b.id
    </select>

    <select id="getAdminBlogList" resultMap="blog">
    SELECT b.id,b.title,b.content,u.username
    FROM blog AS b,users AS u
    WHERE b.writerid=u.id
    order by b.id
    </select>

    <select id="GetBlogByName" resultMap="blog" parameterType="java.lang.String">
        SELECT b.id,b.title,b.content,u.username
        FROM blog AS b,users AS u
        WHERE b.writerid=u.id
        and u.username=#{name}
    </select>

<!--    通过查询到的blog的id进行删除-->
    <delete id="deleteBlog" parameterType="java.lang.Integer">
        delete from blog AS b
        where  b.id= #{id,jdbcType=INTEGER}
    </delete>
    <update id="updateBlog" >
        update blog
        <set>
        <if test="title!=null">
        title=#{title},
        </if>
            content=#{content},
        </set>
        where id=#{id}

    </update>
<insert id="insertBlog">
    insert into blog(title,content,createTime)
value (#{title},#{content},#{createTime})
</insert>
    <!--添加博客-->
    <insert id="WriteBlog">
        insert into blog (title, firstPicture, content, publish, recommend, comment,
                          createTime, updateTime,writerid)
        values (#{title}, #{firstPicture}, #{content},#{publish}, #{recommend}, #{comment},
             #{createTime}, #{updateTime}, #{writerid})
    </insert>


</mapper>